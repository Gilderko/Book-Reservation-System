@model BL.DTOs.Entities.Review.ReviewDTO
@using MVCProject.Config;

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Review</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StarsAmmount)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StarsAmmount)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReservedBook)
        </dt>
        <dd class = "col-sm-10">
            <a asp-controller="Book" asp-action="Details" asp-route-id="@Model.BookTemplateID">
                @Html.DisplayFor(model => model.ReservedBook.Title)
            </a>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            <a asp-controller="User" asp-action="Details" asp-route-id="@Model.UserID">
                @Html.DisplayFor(model => model.User.Name) @Html.DisplayFor(model => model.User.Surname)
            </a>
        </dd>
    </dl>
</div>
<div>
    @if ((User.Identity.Name != null && int.Parse(User.Identity.Name) == Model.UserID) || User.IsInRole(GlobalConstants.AdminRoleName))
    {
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
            <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
        </div>
    }
    <a asp-action="Details" asp-controller="Book" asp-route-id="@Model.BookTemplateID">Back to book</a>
</div>
