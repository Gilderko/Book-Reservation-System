@model IEnumerable<BL.DTOs.Entities.Book.BookPrevDTO>

@{
    ViewData["Title"] = "Index";
}

<h1>Books</h1>

<div class="float-container">
    <div class="float-child-filter">
        <form asp-action="Index" method="post">
            <div class="form-group" name="genre">
                <h5 class="control-label">Genre</h5>
                @foreach (var genre in Enum.GetValues(typeof(BL.DTOs.Enums.GenreTypeDTO)))
                {
                    @if (ViewData["genres"] != null && Array.IndexOf((BL.DTOs.Enums.GenreTypeDTO[])ViewData["genres"], genre) != -1)
                    {
                        <input type="checkbox" checked id="@genre" name="genres" value=@genre>
                    }
                    else
                    {
                        <input type="checkbox" id="@genre" name="genres" value=@genre>
                    }
                    <label for="@genre">@((BL.DTOs.Enums.GenreTypeDTO)genre)</label>
                    <br>
                }
            </div>

            <div class="form-group">
                <h5 class="control-label">Title</h5>
                <input type="text" name="title" value="@(ViewData["bookTitle"])" class="form-control" />
            </div>

            <div class="form-group">
                <h5 class="control-label">Author Name</h5>
                <input type="text" name="authorName" value="@(ViewData["authorName"])" class="form-control" />
            </div>

            <div class="form-group">
                <h5 class="control-label">Author Surname</h5>
                <input type="text" name="authorSurname" value="@(ViewData["authorSurname"])" class="form-control" />
            </div>

            <div class="form-group">
                <h5 class="control-label">Language</h5>
                <select class="form-control" name="language">
                    <option value="">Please select</option>

                    @foreach (var lang in Enum.GetValues(typeof(BL.DTOs.Enums.LanguageDTO)))
                    {
                        @if (ViewData["language"] is not null && (int)lang == (int)ViewData["language"])
                        {
                            <option selected="selected" value=@(lang)>"@(lang)"</option>
                        }
                        else
                        {
                            <option value=@(lang)>"@(lang)"</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <h5 class="control-label">Pages</h5>

                <label class="control-label">From</label>
                <input type="number" name="pageFrom" value="@(ViewData["pageFrom"])" class="form-control" />

                <label class="control-label">To</label>
                <input type="number" name="pageTo" value="@(ViewData["pageTo"])" class="form-control" />
            </div>

            <div class="form-group">
                <h5 class="control-label">Release date</h5>

                <label class="control-label">From</label>
                <input type="date" name="releaseFrom" value="@(ViewData["releaseFrom"] != null ? ((DateTime)ViewData["releaseFrom"]).ToString("yyyy-MM-dd") : null)" class="form-control" />

                <label class="control-label">To</label>
                <input type="date" name="releaseTo" value="@(ViewData["releaseFrom"] != null ? ((DateTime)ViewData["releaseTo"]).ToString("yyyy-MM-dd") : null)" class="form-control" />
            </div>

            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
        </form>
    </div>

    <div class="float-child-content">
        <p>
            <a asp-action="Create">Create New</a>
        </p>

        <table class="table" style="width:1100px; ">

            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Authors)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Language)
                    </th>
                    <th width="300px"></th>
                </tr>
            </thead>
            <tbody >
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @String.Join(", ", item.Authors.Select(x => x.Author.Name + " " + x.Author.Surname))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Language)
                        </td>
                        <td >
                            <div>
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                                <br />
                                <a asp-controller="BookInstance" asp-action="UserCreateBookInstance" asp-route-id="@item.Id">Offer this book</a>
                                <br />
                                <a asp-controller="BookCollection" asp-action="UserAddBookInCollection" asp-route-id="@item.Id">Add in collection</a>
                                <br />
                            </div>

                            @if (User.HasClaim(x => x.Value == "Admin"))
                            {
                        <div>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <br />
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>