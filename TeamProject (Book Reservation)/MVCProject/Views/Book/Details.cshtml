@model BL.DTOs.Entities.Book.BookDTO
@using BL.DTOs.Enums;
@using MVCProject.Config;
@using MVCProject.StateManager;

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Authors)
        </dt>
        <dd class="col-sm-10">
            @foreach (var item in Model.Authors)
            {
                <a asp-controller="Author" asp-action="Details" asp-route-id="@item.AuthorID">
                    @Html.DisplayFor(modelItem => item.Author.Name) @Html.DisplayFor(modelItem => item.Author.Surname)
                </a>
                if (User.IsInRole(GlobalConstants.AdminRoleName))
                {
                    <form asp-action="Details">
                        <input type="hidden" name="bookId" value=@Model.Id>
                        <input type="hidden" name="authorId" value=@item.AuthorID>
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                }
            }
            @if (User.IsInRole(GlobalConstants.AdminRoleName))
            {
                <a asp-controller="Book" asp-action="AddAuthorToBook" asp-route-id="@Model.Id"> | Add author</a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Genres)
        </dt>
        <dd class="col-sm-10">
            @foreach (var item in Model.Genres)
            {
                <p style="margin-bottom: 0px">@((GenreTypeDTO)item.GenreID)</p>
                if (User.IsInRole(GlobalConstants.AdminRoleName))
                {
                    <form asp-action="Details">
                        <input type="hidden" name="bookId" value=@Model.Id>
                        <input type="hidden" name="genreId" value=@item.GenreID>
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                }
            }
            @if (User.IsInRole(GlobalConstants.AdminRoleName))
            {
                <a asp-controller="Book" asp-action="AddGenreToBook" asp-route-id="@Model.Id"> | Add genre</a>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ISBN)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PageCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PageCount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfRelease)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfRelease)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Language)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Language)
        </dd>
    </dl>
</div>
<div>
    <h5>Reviews</h5>    
    <table class="table">
        <thead>
            <tr>
                <th>
                    Author
                </th>
                <th>
                    Stars
                </th>
                <th>
                    Content
                </th>
                <th>
                    @if (!Model.Reviews.Any(entry => entry.UserID == int.Parse(User.Identity.Name)))
                    {
                        <a asp-controller="Review" asp-action="CreateReview" asp-route-id="@Model.Id">
                            Create new review
                        </a>
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Reviews)
            {
                <tr>
                    <td>
                        <a asp-controller="User" asp-action="Details" asp-route-id="@item.UserID">
                            @Html.DisplayFor(modelItem => item.User.Name) @Html.DisplayFor(modelItem => item.User.Surname)
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StarsAmmount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>
                    <td>
                        <a asp-controller="Review" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div>
    <h5>Available books to reserve</h5>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Owner
                </th>
                <th>
                    Condition
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                var currentReservation = StateKeeper.Instance.GetReservationInSession(ViewContext.HttpContext.Session);
                @if (currentReservation != null)
                {
                    foreach (var item in Model.BookInstances)
                    {
                        if (item.BookOwnerId == int.Parse(ViewContext.HttpContext.User.Identity.Name))
                        {
                            continue;
                        }

                        bool shouldDisplay = true;
                        foreach (var reservation in item.AllReservations)
                        {
                            if (currentReservation.DateTill < reservation.Reservation.DateTill)
                            {
                                shouldDisplay = false;
                                break;
                            }
                        }

                        if (shouldDisplay)
                        {
                            <tr>
                                <td>
                                    <a asp-controller="User" asp-action="Details" asp-route-id="@item.BookOwnerId">
                                        @Html.DisplayFor(modelItem => item.Owner.Name) @Html.DisplayFor(modelItem => item.Owner.Surname)
                                    </a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Condition)
                                </td>
                                <td>
                                    Date
                                </td>
                                <td>
                                    <a asp-controller="BookInstance" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                    <a asp-controller="Reservation" asp-action="AddedBookInstance" asp-route-id="@item.Id">Reserve</a>
                                </td>
                            </tr>
                        }
                    }
                }
            }
        </tbody>
    </table>
</div>
<div>
    @if (User.IsInRole(GlobalConstants.AdminRoleName)) 
    {
        <div>
            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
            <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
        </div>
    }
    <a asp-action="Index">Back to List</a>
</div>
