@using MVCProject.Config
@model BL.DTOs.Entities.BookInstance.BookInstanceDTO

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BookInstance</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Condition" class="control-label"></label>
                <select asp-for="Condition" class="form-control"></select>
                <span asp-validation-for="Condition" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BookOwnerId" class="control-label"></label>
                <select asp-for="BookOwnerId" class ="form-control" asp-items="ViewBag.BookOwnerId"></select>
            </div>
            <div class="form-group">
                <label asp-for="BookTemplateID" class="control-label"></label>
                <select asp-for="BookTemplateID" class ="form-control" asp-items="ViewBag.BookTemplateID"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.UserRoleName))
    {
        <a asp-action="UserBookInstances"> | Back to my books</a>
    }
    @if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.AdminRoleName))
    {
        <a asp-action="Index"> | Back to all books</a>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
