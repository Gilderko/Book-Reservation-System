@using BL.DTOs.Entities.Reservation
@using MVCProject.Config
@model BL.DTOs.Entities.BookInstance.BookInstanceDTO

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BookInstance</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Owner)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Owner.Name) @Html.DisplayFor(model => model.Owner.Surname)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FromBookTemplate.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FromBookTemplate.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Condition)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Condition)
        </dd>
    </dl>

    @using (Html.BeginForm("Details", "BookInstance", FormMethod.Post))
    {
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th colspan="2" align="center">Reservations filter:</th>
            </tr>
            <tr>
                <td>Reservation start date: </td>
                <td>
                    @Html.TextBox("StartDate", string.Empty, new { @class = "datepicker", @type = "date" })

                </td>
            </tr>
            <tr>
                <td>Reservation end date: </td>
                <td>
                    @Html.TextBox("EndDate", string.Empty, new { @class = "datepicker", @type = "date" })
                </td>
            </tr>
            <tr>
                <td></td>
                <td><input type="submit" value="Submit" /></td>
            </tr>
        </table>
    }

    <dl class="row">

        @if (ViewData.TryGetValue("queryResult", out object reservations))
        {
            var castedReservations = (IEnumerable<ReservationPrevDTO>)reservations;
            foreach (var reservation in castedReservations)
            {
                <dt class="col-sm-2">
                    @Html.Raw("User:")
                </dt>
                <dd class="col-sm-10">
                    @Html.Raw($"{reservation.User.Name} {reservation.User.Surname}")
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => reservation.DateFrom)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => reservation.DateFrom)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => reservation.DateTill)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => reservation.DateTill)
                </dd>
            }
        }
    </dl>

</div>



@if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.UserRoleName) && Model.BookOwnerId == int.Parse(User.Identity.Name))
{
    <div>
        <a asp-action="UserEditBookInstance" asp-route-id="@Model.Id">Edit my book</a>
        <a asp-action="UserBookInstances"> | Back to my books</a>
    </div>
}

@if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.AdminRoleName))
{
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        <a asp-action="Index"> | Back to all books</a>
    </div>
}
@if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.AdminRoleName) ||
          ViewContext.HttpContext.User.IsInRole(GlobalConstants.UserRoleName) && Model.BookOwnerId == int.Parse(User.Identity.Name))
{
    <div>
        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
    </div>
}

