@model BL.DTOs.Entities.BookCollection.BookCollectionDTO
@using MVCProject.Config;

@{
    ViewData["Title"] = "Details";
}

<h1>Book Collection</h1>
<hr />
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
    </dl>

    <h5>Owner</h5>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerUser.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OwnerUser.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OwnerUser.Surname)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OwnerUser.Surname)
        </dd>
    </dl>

    <div>
        @if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.UserRoleName) && Model.UserId == int.Parse(User.Identity.Name))
        {
            <div>
                <a asp-action="UserEditBookInstance" asp-route-id="@Model.Id">User Edit</a>
                <a asp-action="UserBookInstances"> | Back to my books collections</a>
            </div>
        }

        @if (ViewContext.HttpContext.User.IsInRole(GlobalConstants.AdminRoleName))
        {
            <div>
                <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                <a asp-action="Index"> | Back to all book collections</a>
            </div>
        }
        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>

        <br />

        <h5>Books</h5>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @String.Format("Title")
                    </th>
                    <th>
                        @String.Format("Authors")
                    </th>
                    <th>
                        @String.Format("Language")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in (IEnumerable<BL.DTOs.Entities.Book.BookPrevDTO>)ViewData["books"])
                {
                    <tr>
                        <td>
                            @book.Title
                        </td>
                        <td>
                            @String.Join(", ", book.Authors.Select(x => x.Author.Name + " " + x.Author.Surname))
                        </td>
                        <td>
                            @book.Language
                        </td>
                        <td>
                            <form asp-action="Details">
                                <input type="hidden" name="bookCollectionId" value=@Model.Id>
                                <input type="hidden" name="bookToDeleteId" value=@book.Id>
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </form>
                            <a asp-controller="Book" asp-action="Details" asp-route-id="@book.Id">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
